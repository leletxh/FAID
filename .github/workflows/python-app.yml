name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write  # Required write permission to create and update branches

jobs:
  build_and_deploy:

    runs-on: windows-latest  # Use the latest Windows runtime environment

    env:
      Nuitka_OPTIONS: "--onefile --standalone --include-module=gradio,json,requests --include-package=PIL.ImageQt --output-filename=app.exe app.py --assume-yes-for-downloads --show-progress --jobs=8"
      APP_BRANCH: "app"  # Branch to store the compiled app

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install nuitka
    - name: Verify Nuitka installation
      run: |
        where nuitka
        nuitka --version
    - name: Build EXE with Nuitka
      run: |
        nuitka ${{ env.Nuitka_OPTIONS }}
    - name: Check if app.exe exists
      run: |
        if (-Not (Test-Path -Path ".\app.exe")) {
          throw "app.exe was not generated successfully."
        }
    - name: Zip the output
      run: |
        Compress-Archive -Path .\app.exe -DestinationPath .\app.zip
    - name: Generate filename with timestamp
      id: generate_filename
      run: |
        $timestamp = Get-Date -Format "yyyy-MM-dd_HH-mm-ss"
        $filename = "$timestamp_FAID.zip"
        echo "::set-output name=filename::$filename"
    - name: Move zip file to artifacts directory
      run: |
        $filename = ${{ steps.generate_filename.outputs.filename }}
        New-Item -ItemType Directory -Force -Path "./artifacts"
        Move-Item -Path .\app.zip -Destination "./artifacts/$filename"
    - name: Checkout app branch
      run: |
        git checkout -b ${{ env.APP_BRANCH }} || git checkout ${{ env.APP_BRANCH }}
        git pull origin ${{ env.APP_BRANCH }}
    - name: Add and commit zip file
      run: |
        $filename = ${{ steps.generate_filename.outputs.filename }}
        git add "./artifacts/$filename"
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git commit -m "Add compiled app: $filename" || echo "No changes to commit"
    - name: Push changes to app branch
      run: |
        git push origin ${{ env.APP_BRANCH }}
    - name: Post job cleanup
      run: |
        git config --global --unset-all safe.directory
        git config --local --unset-all core.sshCommand
        git config --local --unset-all http.https://github.com/.extraheader
        git submodule foreach --recursive "git config --local --unset-all core.sshCommand"
        git submodule foreach --recursive "git config --local --unset-all http.https://github.com/.extraheader"
